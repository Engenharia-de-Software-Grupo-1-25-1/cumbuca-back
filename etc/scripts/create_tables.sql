CREATE TABLE USUARIO (
    ID SERIAL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    SENHA VARCHAR(100) NOT NULL,
    NOME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(50) NOT NULL UNIQUE,
    DT_NASCIMENTO DATE NOT NULL,
    FOTO BYTEA,
    STATUS VARCHAR(10) DEFAULT 'ATIVO',
    CONSTRAINT ID_USUARIO_PK PRIMARY KEY (ID),
    CONSTRAINT CHECK_DT_NASCIMENTO_VALIDA CHECK (DT_NASCIMENTO <= CURRENT_DATE - INTERVAL '14 YEARS')
);

CREATE TABLE ESTABELECIMENTO (
    ID SERIAL,
    NOME VARCHAR(100) NOT NULL,
    CATEGORIA VARCHAR(50) NOT NULL,
    RUA VARCHAR(100),
    NUMERO VARCHAR(20),
    BAIRRO VARCHAR(50),
    CIDADE VARCHAR(50),
    ESTADO VARCHAR(2),
    CEP VARCHAR(10),
    CONSTRAINT ID_ESTABELECIMENTO_PK PRIMARY KEY (ID)
);

CREATE TABLE HORARIO (
    ID SERIAL,
    ID_ESTABELECIMENTO INTEGER NOT NULL,
    HORARIO VARCHAR(50),
    CONSTRAINT ID_HORARIO_PK PRIMARY KEY (ID),
    CONSTRAINT ID_HORARIO_ESTABELECIMENTO_FK FOREIGN KEY (ID_ESTABELECIMENTO) REFERENCES ESTABELECIMENTO(ID)
);

CREATE TABLE AVALIACAO (
    ID SERIAL,
    ID_USUARIO INTEGER NOT NULL,
    ID_ESTABELECIMENTO INTEGER NOT NULL,
    CONSUMO VARCHAR(50) NOT NULL,
    DESCRICAO VARCHAR(255) NOT NULL,
    PRECO DECIMAL(10,2),
    NOTA_GERAL INTEGER,
    NOTA_COMIDA INTEGER,
    NOTA_ATENDIMENTO INTEGER,
    NOTA_AMBIENTE INTEGER,
    DATA DATE DEFAULT CURRENT_DATE,
    CONSTRAINT ID_AVALIACAO_PK PRIMARY KEY (ID),
    CONSTRAINT ID_AVALIACAO_USUARIO_FK FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID),
    CONSTRAINT ID_AVALIACAO_ESTABELEC_FK FOREIGN KEY (ID_ESTABELECIMENTO) REFERENCES ESTABELECIMENTO(ID),
    CONSTRAINT CHECK_PRECO_POSITIVO CHECK (PRECO >= 0),
    CONSTRAINT CHECK_NOTA_GERAL_VALIDA CHECK (NOTA_GERAL IN (0, 1, 2, 3, 4, 5)),
    CONSTRAINT CHECK_NOTA_COMIDA_VALIDA CHECK (NOTA_COMIDA IN (0, 1, 2, 3, 4, 5)),
    CONSTRAINT CHECK_NOTA_ATENDIMENTO_VALIDA CHECK (NOTA_ATENDIMENTO IN (0, 1, 2, 3, 4, 5)),
    CONSTRAINT CHECK_NOTA_AMBIENTE_VALIDA CHECK (NOTA_AMBIENTE IN (0, 1, 2, 3, 4, 5))
);

CREATE TABLE TAG (
    ID SERIAL,
    ID_AVALIACAO INTEGER NOT NULL,
    TAG VARCHAR(50) NOT NULL,
    CONSTRAINT ID_TAG_PK PRIMARY KEY (ID),
    CONSTRAINT ID_TAG_AVALIACAO_FK FOREIGN KEY (ID_AVALIACAO) REFERENCES AVALIACAO(ID) ON DELETE CASCADE
);

CREATE TABLE FOTO (
    ID SERIAL,
    ID_AVALIACAO INTEGER NOT NULL,
    FOTO BYTEA,
    CONSTRAINT ID_FOTO_PK PRIMARY KEY (ID),
    CONSTRAINT ID_FOTO_AVALIACAO_FK FOREIGN KEY (ID_AVALIACAO) REFERENCES AVALIACAO(ID) ON DELETE CASCADE
);

CREATE TABLE USUARIO_CURTE_AVALIACAO (
    ID SERIAL,
    ID_USUARIO INTEGER NOT NULL,
    ID_AVALIACAO INTEGER NOT NULL,
    CONSTRAINT USUARIO_CURTE_AVALIACAO_PK PRIMARY KEY (ID),
    CONSTRAINT ID_USUARIO_CURTE_FK FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID),
    CONSTRAINT ID_CURTE_AVALIACAO_FK FOREIGN KEY (ID_AVALIACAO) REFERENCES AVALIACAO(ID) ON DELETE CASCADE
);

CREATE TABLE USUARIO_COMENTA_AVALIACAO (
    ID SERIAL,
    ID_USUARIO INTEGER NOT NULL,
    ID_AVALIACAO INTEGER NOT NULL,
    COMENTARIO VARCHAR(255) NOT NULL,
    CONSTRAINT USUARIO_COMENTA_AVALIACAO_PK PRIMARY KEY (ID),
    CONSTRAINT ID_USUARIO_COMENTA_FK FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID),
    CONSTRAINT ID_COMENTA_AVALIACAO_FK FOREIGN KEY (ID_AVALIACAO) REFERENCES AVALIACAO(ID) ON DELETE CASCADE
);

CREATE TABLE USUARIO_FAVORITA_ESTABELECIMENTO (
    ID SERIAL,
    ID_USUARIO INTEGER NOT NULL,
    ID_ESTABELECIMENTO INTEGER NOT NULL,
    CONSTRAINT ID_FAVORITA_PK PRIMARY KEY (ID),
    CONSTRAINT ID_USUARIO_FAVORITA_FK FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID),
    CONSTRAINT ID_FAVORITA_ESTABELECIMENTO_FK FOREIGN KEY (ID_ESTABELECIMENTO) REFERENCES ESTABELECIMENTO(ID)
);

CREATE OR REPLACE VIEW V_USUARIO
AS
SELECT U.ID,
       U.EMAIL,
       U.SENHA,
       U.NOME,
       U.USERNAME,
       U.DT_NASCIMENTO,
       U.FOTO,
       U.STATUS,
       COUNT(A.ID) AS AVALIACOES
FROM USUARIO U
         LEFT JOIN AVALIACAO A ON A.ID_USUARIO = U.ID
GROUP BY U.ID, U.EMAIL, U.SENHA, U.NOME, U.USERNAME, U.DT_NASCIMENTO, U.FOTO, U.STATUS;

CREATE OR REPLACE VIEW V_ESTABELECIMENTO AS
SELECT E.ID,
       E.NOME,
       E.CATEGORIA,
       E.RUA,
       E.NUMERO,
       E.BAIRRO,
       E.CIDADE,
       E.ESTADO,
       E.CEP,
       CONCAT_WS(' '::TEXT, E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO, E.CEP) AS LOCALIZACAO,
       COUNT(A.ID) AS AVALIACOES,
       AVG(A.NOTA_GERAL) AS NOTA_GERAL
FROM ESTABELECIMENTO E
         LEFT JOIN AVALIACAO A ON E.ID = A.ID_ESTABELECIMENTO
GROUP BY E.ID, E.NOME, E.CATEGORIA, E.RUA, E.NUMERO, E.BAIRRO, E.CIDADE, E.ESTADO, E.CEP;

CREATE OR REPLACE VIEW V_AVALIACAO
AS
SELECT A.ID,
       A.ID_USUARIO,
       A.ID_ESTABELECIMENTO,
       A.CONSUMO,
       A.DESCRICAO,
       A.PRECO,
       A.NOTA_GERAL,
       A.NOTA_COMIDA,
       A.NOTA_ATENDIMENTO,
       A.NOTA_AMBIENTE,
       A.DATA,
       COALESCE(C.QTDCURTIDAS, 0::BIGINT) AS CURTIDAS,
       COALESCE(COM.QTDCOMENTARIOS, 0::BIGINT) AS COMENTARIOS
FROM AVALIACAO A
         LEFT JOIN (SELECT UC.ID_AVALIACAO,
                           COUNT(*) AS QTDCURTIDAS
                    FROM USUARIO_CURTE_AVALIACAO UC
                    GROUP BY UC.ID_AVALIACAO) C
                   ON C.ID_AVALIACAO = A.ID
         LEFT JOIN (SELECT UCOM.ID_AVALIACAO,
                           COUNT(*) AS QTDCOMENTARIOS
                    FROM USUARIO_COMENTA_AVALIACAO UCOM
                    GROUP BY UCOM.ID_AVALIACAO) COM
                   ON COM.ID_AVALIACAO = A.ID;
